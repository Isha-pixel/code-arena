# # # # executor/docker-compose.yml
# # # version: "3.8"
# # # services:
# # #   cpp:
# # #     image: codearena/cpp-executor
# # #     container_name: oj-cpp
# # #     ports: ["9001:8000"]
# # #     command: ["python3","/app/main.py"]
# # #     restart: unless-stopped

# # #   python:
# # #     image: codearena/python-executor
# # #     container_name: oj-python
# # #     ports: ["9002:8000"]
# # #     command: ["python3","/app/main.py"]
# # #     restart: unless-stopped

# # #   java:
# # #     image: codearena/java-executor
# # #     container_name: oj-java
# # #     ports: ["9003:8000"]
# # #     command: ["python3","/app/main.py"]
# # #     restart: unless-stopped



# # services:
# #   executor:
# #     image: codearena/executor-api
# #     # or build from local Dockerfile:
# #     # build:
# #     #   context: .
# #     #   dockerfile: Dockerfile.executor
# #     container_name: executor-api
# #     ports:
# #       - "8001:8001"            # host:container
# #     # mount Docker socket so the API can spin up the language containers
# #     volumes:
# #       - /var/run/docker.sock:/var/run/docker.sock
# #       - ./temp:/app/temp       # where your FastAPI writes temp code/input
# #     environment:
# #       - PYTHONUNBUFFERED=1
# #     restart: unless-stopped




# services:
#   executor:
#     image: codearena/executor-api
#     # or build locally:
#     # build:
#     #   context: .
#     #   dockerfile: Dockerfile.executor
#     container_name: executor-api
#     ports:
#       - "8001:8001"                   # host:container
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock   # << give API access to Docker daemon
#       - ./temp:/app/temp                            # where API writes code/input (optional but handy)
#     environment:
#       - PYTHONUNBUFFERED=1
#       - DOCKER_HOST=unix:///var/run/docker.sock     # explicit; docker-py also infers this
#     restart: unless-stopped



services:
  executor:
    image: codearena/executor-api
    container_name: executor-api
    ports:
      - "8001:8001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock          # allow talking to the Docker daemon
      - ${PWD}/runs:/runs                                  # host folder for per-run files
    environment:
      - HOST_RUNS_DIR=${PWD}/runs                          # absolute host path (string)
      - IN_CONTAINER_RUNS_DIR=/runs                        # where itâ€™s mounted inside this container
    restart: unless-stopped
